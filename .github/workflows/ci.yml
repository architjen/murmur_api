name: CI for FastAPI with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        container_name: postgres_container
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        volumes:
          - postgres_data:/var/lib/postgresql/data/
          - ./app/db/create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker Buildx for multi-platform builds (Optional for Docker Compose)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Cache Docker layers to speed up build times
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Build and run the Docker containers defined in docker-compose.yml
    - name: Build and run with Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d --build

    # Run the tests
    - name: Run tests
      run: |
        docker-compose exec -T api pytest  # Assuming you have pytest configured for your FastAPI tests

    # Shutdown the services after tests
    - name: Shutdown Docker Compose services
      run: |
        docker-compose down

volumes:
  postgres_data:
    driver: local
